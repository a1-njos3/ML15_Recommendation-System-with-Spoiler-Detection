# import pandas library
import pandas as pd

# Get the data
column_names = ['user_id', 'item_id', 'rating', 'timestamp']

path = 'https://media.geeksforgeeks.org/wp-content/uploads/file.tsv'


df = pd.read_csv(path, sep='\t', names=column_names)

# Check the head of the data
df.head()


# Check out all the movies and their respective IDs
movie_titles = pd.read_csv('https://media.geeksforgeeks.org/wp-content/uploads/Movie_Id_Titles.csv')
movie_titles.head()


data = pd.merge(df, movie_titles, on='item_id')
data.head()


# creating dataframe with 'rating' count values
ratings = pd.DataFrame(data.groupby('title')['rating'].mean()) 
  
ratings['num of ratings'] = pd.DataFrame(data.groupby('title')['rating'].count())
  
ratings.head()

# Sorting values according to
# the 'num of rating column'
moviemat = data.pivot_table(index ='user_id',
			columns ='title', values ='rating')

moviemat.head()

ratings.sort_values('num of ratings', ascending = False).head(10)

#taking input from the user
val = input("Name of the movie= ")

# analysing correlation with similar movies
val_user_ratings = moviemat[val]


val_user_ratings.head()


# analysing correlation with similar movies
similar_to_val = moviemat.corrwith(val_user_ratings)

corr_val = pd.DataFrame(similar_to_val, columns =['Correlation'])
corr_val.dropna(inplace = True)

corr_val.head()

# Similar movies like starwars
corr_val.sort_values('Correlation', ascending = False).head(10)
corr_val = corr_val.join(ratings['num of ratings'])
corr_val.head()
corr_val[corr_val['num of ratings']>100].sort_values('Correlation', ascending = False).head()
print(corr_val[corr_val['num of ratings']>100].sort_values('Correlation', ascending = False).head())
